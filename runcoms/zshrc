#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# Custom key bindings
bindkey "\033[1;5D" backward-word
bindkey "\033[1;5C" forward-word
bindkey "^A" beginning-of-line
bindkey "^E" end-of-line
bindkey "^H" run-help
bindkey "^ " autosuggest-accept
# bindkey "^^M" autosuggest-execute
bindkey -M vicmd "q" push-line
bindkey -M viins ' ' magic-space

# Pick item but stay in the menu
# bindkey -M menuselect "+" accept-and-menu-complete
#
# Figure out what this does
# bindkey -M menuselect "/" accept-and-infer-next-history

# set option INTERACTIVE_COMMENTS
set -k

setopt no_nomatch

# Share history file amongst all Zsh sessions, ignoring dupes
setopt append_history share_history histignorealldups

# Load fzf
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

# Load autojump
if which brew &> /dev/null; then
  [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh
else
  [[ -f /usr/share/autojump/autojump.sh ]] && . /usr/share/autojump/autojump.sh
fi

# gulp completion
if which gulp &> /dev/null; then
  eval "$(gulp --completion=zsh)"
fi

# grunt completion
if which grunt &> /dev/null; then
  eval "$(grunt --completion=zsh)"
fi

# More aliases
alias gff="git-flow"
alias mux=tmuxinator
alias cdu="cd-gitroot"
alias pt="pt --global-gitignore"

# Fix run-help
case $(type run-help) in
  *alias*)
    unalias run-help
    autoload -U run-help
    autoload run-help-git
esac

if [[ -d /usr/local/share/zsh/help ]]; then
  HELPDIR=/usr/local/share/zsh/help
fi

if [[ -f ~/.iterm2_shell_integration ]]; then
  source ~/.iterm2_shell_integration.zsh
fi

if which thefuck-alias &> /dev/null; then
    eval "$(thefuck --alias)"
fi

function swap() {
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}

# man page colors
export LESS_TERMCAP_mb=$'\E[01;31m'      # Begins blinking.
export LESS_TERMCAP_md=$'\E[1;93m'       # Begins bold.
export LESS_TERMCAP_me=$'\E[0m'          # Ends mode.
export LESS_TERMCAP_se=$'\E[0m'          # Ends standout-mode.
export LESS_TERMCAP_so=$'\E[00;47;30m'   # Begins standout-mode.
export LESS_TERMCAP_ue=$'\E[0m'          # Ends underline.
export LESS_TERMCAP_us=$'\E[01;92m'      # Begins underline.
